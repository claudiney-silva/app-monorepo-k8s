name: Build, Deploy Bar

on:
  push:
    branches:
      - 'master'
      - 'develop'
      - 'feat/*'
    paths:
      - 'apps/bar/**'
  pull_request:
    branches:
      - 'master'
      - 'develop'
      - 'feat/*'
    paths:
      - 'apps/bar/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-jar-docker:
    name: build-jar-docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/feat')
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache Depdendencies
        uses: actions/cache@v2.1.5
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: JDK
        uses: actions/setup-java@v2.1.0
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Build
        run: mvn clean package --projects :bar --also-make --threads=2 --batch-mode

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build image and push to Docker Hub and GitHub Container Registry
        uses: docker/build-push-action@v2
        with:
          context: ./apps/bar
          #push: ${{ github.ref == 'refs/heads/main' }}
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/java-monorepo.apps.bar:latest
            ${{ secrets.DOCKER_USERNAME }}/java-monorepo.apps.bar:${{ github.run_number }}

      #- name: OKTeto - Login
      #  uses: okteto/login@master
      #  with:
      #    token: ${{ secrets.OKTETO_TOKEN }}

      #- name: OKTeto - Activate Namespace
      #  uses: okteto/namespace@master
      #  with:
      #    namespace: claudiney-silva

      #- name: OKTeto - Create deployment
      #  uses: okteto/apply@master
      #  with:
      #    manifest: k8s

      - name: Install Helm
        uses: Azure/setup-helm@v1
        with:
          version: v3.3.1


# We had a custom GitHub Action to deploy to our Kubernetes cluster.
# Examples:
#
#  deploy-dev:
#    name: Deploy to Dev
#    needs: build-jar-docker
#    if: startsWith(github.ref, 'refs/heads/dev') || github.ref == 'refs/heads/master'
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2.3.4
#      - uses: Deploy Action
#        env:
#          CLUSTER: dev-fss
#          RESOURCE: Points to k8s resource
#
#  deploy-prod:
#    name: Deploy to Prod
#    needs: build-jar-docker
#    if: github.ref == 'refs/heads/master'
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2.3.4
#      - uses:Deploy Action
#        env:
#          CLUSTER: prod-fss
#          RESOURCE: Points to k8s resource
